@page "/purchase"

@attribute [Authorize]
@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase
@using Inventory_Management_System.Shared.ViewModels
<h3>Compra de Inventario</h3>
<br/>

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="po">Orden de Compra</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="inv">Inventario a Comprar</label>
            <ViewInventoriesComponent 
                OnSelectInventory="OnSelectInventory"
                DisplaySearchResult= "true"></ViewInventoriesComponent>
            <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>
            <input type="hidden" value="@selectedInventory?.InventoryId" />
            @if(selectedInventory !=null)
            {
                <text>Precio:</text>
                @selectedInventory?.Price.ToString("c")
            }
            
        </div>

        <div class="form-group">
            <label for="quantity">Cantidad</label>
            <InputNumber id="quantity" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>

        <br />
        <button type="submit" class="btn btn-primary">Comprar</button>

    </EditForm>
}




@code {
    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();

    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName;
    }

    private async Task OnValidSubmit()
    {
        await PurchaseInventoryUseCase.ExecuteAsync(
            this.purchaseViewModel.PurchaseOrder,
            this.selectedInventory,
            this.purchaseViewModel.QuantityToPurchase,
            "Frank" // reemplazar despues cuando realicemos el login

        );
        this.purchaseViewModel = new PurchaseViewModel();
        this.selectedInventory = null;
    }
    
}
