@page "/products"

@attribute [Authorize]

@inject NavigationManager NavigationManager
@inject IViewProductsByNameUseCase ViewProductsByNameUseCase

<h3>Lista de Productos</h3>
<br/>
<ViewProductsComponent OnSearchProducts= "OnSearchProducts"></ViewProductsComponent>

@if (listProducts != null)
{
    <table class="table">
        <thead>
           <tr>
               <th>Nombre</th>
               <th>Cantidad</th>
               <th>Precio</th>
               <th></th>
           </tr>
        </thead>
        <tbody>
            @foreach( var product in this.listProducts)
            {
                <ProductItemComponent 
                    Product="product"
                    OnProductDeleted="OnProductDeleted"></ProductItemComponent>
            
            }
    </tbody>
    </table>
}
<br/>
<button ttype="button" class="btn btn-primary" @onclick="AddProduct">Agregar Producto</button>


@code {
    private List<Product>? listProducts;

    protected override async Task OnInitializedAsync()
    {
        await LoadProduct();
    }
    private void OnSearchProducts(List<Product> products)
    {
        this.listProducts = products;
    }
    private void AddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }

    private async Task OnProductDeleted()
    {
        await LoadProduct();
    }

    private async Task LoadProduct()
    {
        var prods = await ViewProductsByNameUseCase.ExecuteAsync();
        this.listProducts = prods.ToList();
    }
}
